extends layout

block content
  h1=title

  form(method='POST' action='')
    .form-group
      label(for='book') Book:
      select#book.form-control(type='select' placeholder='Select book' name = 'book' required= 'true')
        - book_list.sort((a, b) => { let titleA = a.title.toUpperCase();  let titleB = b.title.toUpperCase();  let authorFirstA = a.author.first_name.toUpperCase(); let authorFirstB = b.author.first_name.toUpperCase(); let authorFamilyA = a.author.family_name.toUpperCase(); let authorFamilyB = b.author.family_name.toUpperCase(); return (textA < textB) ? -1 : (textA > textB) ? 1 : (authorFamilyA < authorFamilyB) ? -1 : (authorFamilyA > authorFamilyB) ? 1 : (authorFirstA < authorFirstB) ? -1 : (authorFirstA > authorFirstB) ? 1 : 0; })
        for book in book_list
          if bookinstance
            option(value=book._id selected= (bookinstance.book.toString() == book._id.toString() ? 'selected' : false))= book.title + ' by ' + book.author.first_name + ' ' + book.author.family_name
          else
            option(value=book._id)= book.title + ' by ' + book.author.first_name + ' ' + book.author.family_name

    .form-group
      label(for='imprint') Imprint:
      input#imprint.form-control(type='text' placeholder='Publisher and date information' name='imprint' required='true' value = bookinstance && bookinstance.imprint || '')
    .form-group
      label(for='due_back') Date when book available:
      input#due_back.form-control(type='date' name='due_back' value=bookinstance && bookinstance.due_back || '' placeholder='mm/dd/yyyy')
    
    .form-group
      label(for='status') Status:
      select#status.form-control(type='select' placeholder='Select Status' name='status' required='true')
        option(value='Maintenance') Maintenance
        option(value='Available') Available
        option(value='Loaned') Loaned
        option(value='Reserved') Reserved
  
    button.btn.btn-primary(type='submit') Submit
  
  if errors
    ul
      for error in errors
        li!= error.msg